NULL vs Blank in Django

Cand lucram cu modele si baze de date in Django, intalnim des doua atribute importante: `null=True` si `blank=True`. Acestea controleaza modul in care un camp dintr-un model poate gestiona valorile lipsa, dar au scopuri diferite.

null=True (pentru baza de date)
- Acest atribut indica daca un camp din baza de date poate avea valoarea NULL.
- Se foloseste pentru campuri unde lipsa unei valori este acceptabila, cum ar fi ForeignKey sau DateTimeField.
- Daca `null=True`, baza de date permite ca acel camp sa ramana gol (fara valoare).

blank=True (pentru formulare)
- Acest atribut controleaza daca un camp poate fi lasat necompletat intr-un formular Django.
- Este folosit pentru validare la nivel de interfata si nu afecteaza structura bazei de date.
- Daca `blank=True`, formularul Django nu va cere completarea campului inainte de trimitere.

Combinatia `null=True` si `blank=True`
- Daca ambele sunt setate, campul poate ramane gol atat in baza de date, cat si in formular.
- Aceasta combinatie este utila pentru campurile optionale, unde lipsa unei valori este acceptabila in orice context.
